{"ast":null,"code":"var _jsxFileName = \"/Users/birtespreuer/Desktop/CODE/portfolio/src/components/Projects.js\";\nimport projects from \"../data/data\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"../stylesheets/Projects.scss\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nconst categorylist = [{\n  id: 1,\n  category: \"all\",\n  value: \"all\"\n}, {\n  id: 2,\n  category: \"poster\",\n  value: \"all\"\n}, {\n  id: 3,\n  category: \"code\",\n  value: \"all\"\n}, {\n  id: 4,\n  category: \"editorial\",\n  value: \"all\"\n}];\nexport function Projects(props) {\n  const [filter, setFilter] = useState(\"all\");\n  const filteredPortfolio = useMemo(() => {\n    if (filter === \"all\") return projects;\n    return projects.filter(portfolio => portfolio.category === filter);\n  }, [filter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"portfolio-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, categorylist.map(types => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => setFilter(types.category),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, types.category)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, filteredPortfolio.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    item: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })))));\n}\n/*  const [filter, setFilter] = useState(\"all\");\n  const [projectlist, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects(projects);\n  }, []);\n\n  useEffect(() => {\n    setProjects([]);\n\n    const filtered = projects.map((p) => ({\n      ...p,\n      filtered: p.category.includes(filter),\n    }));\n    setProjects(filtered);\n  }, [filter]);\n\n  return (\n    <div className=\"projects--wrapper\">\n      <div className=\"project--filter\">\n        <a href=\"/#\" active={filter === \"all\"} onClick={() => setFilter(\"all\")}>\n          all\n        </a>\n        <a\n          href=\"/#\"\n          active={filter === \"poster\"}\n          onClick={() => setFilter(\"poster\")}\n        >\n          poster\n        </a>\n        <a\n          href=\"/#\"\n          active={filter === \"code\"}\n          onClick={() => setFilter(\"code\")}\n        >\n          code\n        </a>\n        <a\n          href=\"/#\"\n          active={filter === \"editorial\"}\n          onClick={() => setFilter(\"editorial\")}\n        >\n          editorial\n        </a>\n      </div>\n      <div className=\"projects--items\">\n        {projectlist.map((item) =>\n          item.filtered === true ? (\n            <div key={item.title} className=\"projects--item\">\n              <div className=\"projects--title_text\"> {item.title}</div>\n              <div className=\"list--projects_right\">\n                <img\n                  className=\"list--project_img\"\n                  src={item.image}\n                  alt=\"project\"\n                />\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )\n        )}\n      </div>\n    </div>\n  );} */\n\nconst mapStateToProps = state => {\n  return {\n    project: state.selected.project\n  };\n};\n\nexport default connect(mapStateToProps)(Projects);","map":{"version":3,"sources":["/Users/birtespreuer/Desktop/CODE/portfolio/src/components/Projects.js"],"names":["projects","Link","connect","React","useState","useEffect","useMemo","categorylist","id","category","value","Projects","props","filter","setFilter","filteredPortfolio","portfolio","map","types","item","title","mapStateToProps","state","project","selected"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,8BAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,KAAnB;AAA0BC,EAAAA,KAAK,EAAE;AAAjC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,QAAnB;AAA6BC,EAAAA,KAAK,EAAE;AAApC,CAFmB,EAGnB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,MAAnB;AAA2BC,EAAAA,KAAK,EAAE;AAAlC,CAHmB,EAInB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,QAAQ,EAAE,WAAnB;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CAJmB,CAArB;AAOA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMW,iBAAiB,GAAGT,OAAO,CAAC,MAAM;AACtC,QAAIO,MAAM,KAAK,KAAf,EAAsB,OAAOb,QAAP;AAEtB,WAAOA,QAAQ,CAACa,MAAT,CAAiBG,SAAD,IAAeA,SAAS,CAACP,QAAV,KAAuBI,MAAtD,CAAP;AACD,GAJgC,EAI9B,CAACA,MAAD,CAJ8B,CAAjC;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,YAAY,CAACU,GAAb,CAAkBC,KAAD,iBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,OAAO,EAAE,MAAMJ,SAAS,CAACI,KAAK,CAACT,QAAP,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CS,KAAK,CAACT,QAApD,CADF,CADD,CADH,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,iBAAiB,CAACE,GAAlB,CAAuBE,IAAD,iBACrB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACX,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,IAAI,EAAEW,IAAI,CAACC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CATF,CADF;AAmBD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,QAAN,CAAeD;AADnB,GAAP;AAGD,CAJD;;AAMA,eAAerB,OAAO,CAACmB,eAAD,CAAP,CAAyBV,QAAzB,CAAf","sourcesContent":["import projects from \"../data/data\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"../stylesheets/Projects.scss\";\nimport React, { useState, useEffect, useMemo } from \"react\";\n\nconst categorylist = [\n  { id: 1, category: \"all\", value: \"all\" },\n  { id: 2, category: \"poster\", value: \"all\" },\n  { id: 3, category: \"code\", value: \"all\" },\n  { id: 4, category: \"editorial\", value: \"all\" },\n];\n\nexport function Projects(props) {\n  const [filter, setFilter] = useState(\"all\");\n\n  const filteredPortfolio = useMemo(() => {\n    if (filter === \"all\") return projects;\n\n    return projects.filter((portfolio) => portfolio.category === filter);\n  }, [filter]);\n\n  return (\n    <div>\n      <div className=\"portfolio-nav\">\n        {categorylist.map((types) => (\n          <div>\n            <a onClick={() => setFilter(types.category)}>{types.category}</a>\n          </div>\n        ))}\n      </div>\n\n      <div>\n        {filteredPortfolio.map((item) => (\n          <div key={item.id}>\n            <div item={item.title} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n/*  const [filter, setFilter] = useState(\"all\");\n  const [projectlist, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects(projects);\n  }, []);\n\n  useEffect(() => {\n    setProjects([]);\n\n    const filtered = projects.map((p) => ({\n      ...p,\n      filtered: p.category.includes(filter),\n    }));\n    setProjects(filtered);\n  }, [filter]);\n\n  return (\n    <div className=\"projects--wrapper\">\n      <div className=\"project--filter\">\n        <a href=\"/#\" active={filter === \"all\"} onClick={() => setFilter(\"all\")}>\n          all\n        </a>\n        <a\n          href=\"/#\"\n          active={filter === \"poster\"}\n          onClick={() => setFilter(\"poster\")}\n        >\n          poster\n        </a>\n        <a\n          href=\"/#\"\n          active={filter === \"code\"}\n          onClick={() => setFilter(\"code\")}\n        >\n          code\n        </a>\n        <a\n          href=\"/#\"\n          active={filter === \"editorial\"}\n          onClick={() => setFilter(\"editorial\")}\n        >\n          editorial\n        </a>\n      </div>\n      <div className=\"projects--items\">\n        {projectlist.map((item) =>\n          item.filtered === true ? (\n            <div key={item.title} className=\"projects--item\">\n              <div className=\"projects--title_text\"> {item.title}</div>\n              <div className=\"list--projects_right\">\n                <img\n                  className=\"list--project_img\"\n                  src={item.image}\n                  alt=\"project\"\n                />\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )\n        )}\n      </div>\n    </div>\n  );} */\n\nconst mapStateToProps = (state) => {\n  return {\n    project: state.selected.project,\n  };\n};\n\nexport default connect(mapStateToProps)(Projects);\n"]},"metadata":{},"sourceType":"module"}