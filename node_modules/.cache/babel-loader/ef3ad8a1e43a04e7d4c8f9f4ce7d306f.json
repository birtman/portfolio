{"ast":null,"code":"var _jsxFileName = \"/Users/birtespreuer/Desktop/CODE/portfolio/src/components/Projects.js\";\nimport projects from \"../data/data\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"../stylesheets/Projects.scss\";\nimport React, { useState, useEffect, useMemo } from \"react\";\n/* const categorylist = [\n  { id: 1, category: \"all\", value: \"all\" },\n  { id: 2, category: \"poster\", value: \"all\" },\n  { id: 3, category: \"code\", value: \"all\" },\n  { id: 4, category: \"editorial\", value: \"all\" },\n]; */\n\nexport function Projects(props) {\n  /* const [filter, setFilter] = useState(\"all\");\n   const filteredPortfolio = useMemo(() => {\n    if (filter === \"all\") return projects;\n    else return projects.filter((portfolio) => portfolio.category === filter);\n  }, [filter]);\n   return (\n    <div>\n      <div className=\"portfolio-nav\">\n        {categorylist.map((types) => (\n          <div>\n            <a onClick={() => setFilter(types.category)}>{types.category}</a>\n          </div>\n        ))}\n      </div>\n       <div>\n        {filteredPortfolio.map((item) => (\n          <div key={item.id}>\n            <div item={item.title} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n  } */\n  const [filter, setFilter] = useState(\"all\");\n  const [projectlist, setProjects] = useState([]);\n  useEffect(() => {\n    setProjects(projects);\n  }, []);\n  useEffect(() => {\n    setProjects([]);\n    const filtered = projects.map(p => ({ ...p,\n      filtered: p.category.includes(filter)\n    }));\n    setProjects(filtered);\n  }, [filter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects--wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project--filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    active: filter === \"all\",\n    onClick: () => setFilter(\"all\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"all\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    active: filter === \"poster\",\n    onClick: () => setFilter(\"poster\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"poster\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    active: filter === \"code\",\n    onClick: () => setFilter(\"code\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"code\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    active: filter === \"editorial\",\n    onClick: () => setFilter(\"editorial\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"editorial\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects--items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, projectlist.map(item => item.filtered === true ? /*#__PURE__*/React.createElement(\"div\", {\n    key: item.title,\n    className: \"projects--item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"projects--title_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \" \", item.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list--projects_right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"list--project_img\",\n    src: item.image,\n    alt: \"project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }))) : [])));\n}\n\nconst mapStateToProps = state => {\n  return {\n    project: state.selected.project\n  };\n};\n\nexport default connect(mapStateToProps)(Projects);","map":{"version":3,"sources":["/Users/birtespreuer/Desktop/CODE/portfolio/src/components/Projects.js"],"names":["projects","Link","connect","React","useState","useEffect","useMemo","Projects","props","filter","setFilter","projectlist","setProjects","filtered","map","p","category","includes","item","title","image","mapStateToProps","state","project","selected"],"mappings":"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","sourcesContent":["import projects from \"../data/data\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"../stylesheets/Projects.scss\";\nimport React, { useState, useEffect, useMemo } from \"react\";\n\n/* const categorylist = [\n  { id: 1, category: \"all\", value: \"all\" },\n  { id: 2, category: \"poster\", value: \"all\" },\n  { id: 3, category: \"code\", value: \"all\" },\n  { id: 4, category: \"editorial\", value: \"all\" },\n]; */\n\nexport function Projects(props) {\n  /* const [filter, setFilter] = useState(\"all\");\n\n  const filteredPortfolio = useMemo(() => {\n    if (filter === \"all\") return projects;\n    else return projects.filter((portfolio) => portfolio.category === filter);\n  }, [filter]);\n\n  return (\n    <div>\n      <div className=\"portfolio-nav\">\n        {categorylist.map((types) => (\n          <div>\n            <a onClick={() => setFilter(types.category)}>{types.category}</a>\n          </div>\n        ))}\n      </div>\n\n      <div>\n        {filteredPortfolio.map((item) => (\n          <div key={item.id}>\n            <div item={item.title} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n} */\n  const [filter, setFilter] = useState(\"all\");\n  const [projectlist, setProjects] = useState([]);\n\n  useEffect(() => {\n    setProjects(projects);\n  }, []);\n\n  useEffect(() => {\n    setProjects([]);\n\n    const filtered = projects.map((p) => ({\n      ...p,\n      filtered: p.category.includes(filter),\n    }));\n    setProjects(filtered);\n  }, [filter]);\n\n  return (\n    <div className=\"projects--wrapper\">\n      <div className=\"project--filter\">\n        <a href=\"/#\" active={filter === \"all\"} onClick={() => setFilter(\"all\")}>\n          all\n        </a>\n        <a\n          href=\"/#\"\n          active={filter === \"poster\"}\n          onClick={() => setFilter(\"poster\")}\n        >\n          poster\n        </a>\n        <a\n          href=\"/#\"\n          active={filter === \"code\"}\n          onClick={() => setFilter(\"code\")}\n        >\n          code\n        </a>\n        <a\n          href=\"/#\"\n          active={filter === \"editorial\"}\n          onClick={() => setFilter(\"editorial\")}\n        >\n          editorial\n        </a>\n      </div>\n      <div className=\"projects--items\">\n        {projectlist.map((item) =>\n          item.filtered === true ? (\n            <div key={item.title} className=\"projects--item\">\n              <div className=\"projects--title_text\"> {item.title}</div>\n              <div className=\"list--projects_right\">\n                <img\n                  className=\"list--project_img\"\n                  src={item.image}\n                  alt=\"project\"\n                />\n              </div>\n            </div>\n          ) : (\n            []\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    project: state.selected.project,\n  };\n};\n\nexport default connect(mapStateToProps)(Projects);\n"]},"metadata":{},"sourceType":"module"}